    - name: disable default nodjs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable  nodjs-20
      ansible.builtin.command: dnf module enable nodejs:20 -y


    - name: Install the latest version
      ansible.builtin.dnf: 
        name: " {{ item }}"
        state: installed
      loop:
          - nodejs
          - mysql


    - name: expense
      ansible.builtin.user:
        name: expense

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download backend content
      ansible.builtin.get_url:
       url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
       dest: /tmp/backend.zip 

    - name: Unarchive a backend file
      ansible.builtin.unarchive:
        src: /tmp/backend.zip 
        dest: /app
        remote_src: yes

    - name: install npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app
                
    - name: Copy file servicefile
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install python mysql dependencies
      ansible.builtin.pip: 
        name:
        - PyMySQL # to connect MySQL DB from Ansible
        - cryptography
        executable: pip3.9 # pip3.11 if python version is 3.11

    - name: import data into mysql
      community.mysql.mysql_db:
        login_user: "{{login_user}}"
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        state: import
        name: all
    
    - name: reload service file
      ansible.builtin.systemd_service:
       daemon_reload: true

